---
- hosts: all
  roles:
    - rbenv
  tasks:
    - name: complete postgis installation
      sudo: true
      sudo_user: postgres
      shell: echo "create extension postgis;" | psql
    - name: check if vagrant db user exists
      sudo: true
      sudo_user: postgres
      command: psql postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='vagrant'"
      register: vagrant_db_user_exists
    - name: add vagrant database (super)user
      sudo: true
      sudo_user: postgres
      shell: createuser vagrant -ws
      when: vagrant_db_user_exists.stdout != '1'
    - name: terrible hack to get database in right coallation
      sudo: true
      sudo_user: postgres
      shell: |
        echo "UPDATE pg_database SET datistemplate = FALSE WHERE datname = 'template1'; \
        DROP DATABASE template1; \
        CREATE DATABASE template1 WITH TEMPLATE = template0 ENCODING = 'UNICODE' LC_CTYPE='en_US.utf8' LC_COLLATE='en_US.utf8'; \
        UPDATE pg_database SET datistemplate = TRUE WHERE datname = 'template1'; \
        \\c template1 \
        VACUUM FREEZE;" | psql postgres -t
    - name: install some cool packages
      apt: pkg={{ item }} state=latest install_recommends=no update_cache=yes
      sudo: true
      with_items:
        - make
        - curl
        - git
        - htop
        - screen
        - vim
        - nodejs
        - imagemagick # paperclip gem resizes images before uploading
        - libqtwebkit-dev # for capybara headless webkit
        - libqt4-dev # for capybara headless webkit
        - xvfb # for capybara headless webkit
        - build-essential # for capybara headless webkit
    - name: installing necessary gems
      shell: source /etc/profile && cd /vagrant && gem install bundler && rbenv rehash && bundle install executable=/bin/bash
    - name: set up databases
      shell: source /etc/profile && cd /vagrant && bundle exec rake db:reset && RAILS_ENV=test bundle exec rake db:drop db:create db:schema:load executable=/bin/bash

